{
  "properties": {
    "lenses": {
      "0": {
        "order": 0,
        "parts": {
          "0": {
            "position": {
              "x": 0,
              "y": 0,
              "colSpan": 19,
              "rowSpan": 3
            },
            "metadata": {
              "inputs": [],
              "type": "Extension/HubsExtension/PartType/MarkdownPart",
              "settings": {
                "content": {
                  "settings": {
                    "content": "<td style=\"background-color:gray\";>\r\n<div style='line-height:50px;'>\r\n<span style='font-size:39px;font-weight:bold'>Azure dashboard - Cost and Optimization</span></br></br>\r\n<span style='font-size:14px;font-weight:normal'>This dashboard provides an overview of orphaned resources.</span>\r\n<img style=\"float: right; width=\"120\" height=\"60\";\" src=\"https://github.githubassets.com/images/modules/open_graph/github-mark.png\"></br>Please see the Checklist of Optmization Cost https://docs.microsoft.com/en-us/azure/architecture/framework/cost/optimize-checklist\r\n</div>\r\n</td>\r\n",
                    "title": "",
                    "subtitle": "",
                    "markdownSource": 1,
                    "markdownUri": null
                  }
                }
              }
            }
          },
          "1": {
            "position": {
              "x": 0,
              "y": 3,
              "colSpan": 19,
              "rowSpan": 1
            },
            "metadata": {
              "inputs": [],
              "type": "Extension/HubsExtension/PartType/MarkdownPart",
              "settings": {
                "content": {
                  "settings": {
                    "content": "<div style='line-height:50px;'>\n<span style='font-size:16px;font-weight:bold'>Assets Overview</span>\n<span> - This section provides a resource count per location overview of your assets.</span>\n</div>\n",
                    "title": "",
                    "subtitle": "",
                    "markdownSource": 1,
                    "markdownUri": null
                  }
                }
              }
            }
          },
          "2": {
            "position": {
              "x": 0,
              "y": 4,
              "colSpan": 19,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Summarization by Resource Type, Count and Location",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Summarization by Resource Type, Count and Location\r\nresources\r\n| summarize count() by ['type'], location, subscriptionId\r\n| extend total=count_\r\n| order by location asc , total desc\r\n| project ResourceType=['type'], ResourceLocation=location, CountOfResources=total, subscriptionId\r\n",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "9593eb19-5f69-4701-b9de-567e09bcc213",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {}
            }
          },
          "3": {
            "position": {
              "x": 0,
              "y": 8,
              "colSpan": 3,
              "rowSpan": 13
            },
            "metadata": {
              "inputs": [],
              "type": "Extension/HubsExtension/PartType/MarkdownPart",
              "settings": {
                "content": {
                  "settings": {
                    "content": "<div style='line-height:50px;'>\n<span style='font-size:22px;font-weight:bold'>Orphaned Assets</span>\n</div>",
                    "title": "",
                    "subtitle": "",
                    "markdownSource": 1,
                    "markdownUri": null
                  }
                }
              }
            }
          },
          "4": {
            "position": {
              "x": 3,
              "y": 8,
              "colSpan": 16,
              "rowSpan": 1
            },
            "metadata": {
              "inputs": [],
              "type": "Extension/HubsExtension/PartType/MarkdownPart",
              "settings": {
                "content": {
                  "settings": {
                    "content": "<div style='line-height:50px;'>\n<span style='font-size:16px;font-weight:bold'>Orphaned Assets</span>\n<span> - This section provides an overview of your orphaned assets.</span>\n</div>\n",
                    "title": "",
                    "subtitle": "",
                    "markdownSource": 1,
                    "markdownUri": null
                  }
                }
              }
            }
          },
          "5": {
            "position": {
              "x": 3,
              "y": 9,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Orphaned Disks",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Orphaned Disks\r\nResources\r\n| where type has \"microsoft.compute/disks\"\r\n| extend Diskid=id, DiskState = tostring(properties.diskState), DiskresourceGroup=resourceGroup, DiskLocation=location\r\n| order by Diskid asc\r\n| where managedBy == \"\" and DiskState != 'ActiveSAS' or DiskState == 'Unattached' and DiskState != 'ActiveSAS'\r\n| project Diskid, DiskState, DiskresourceGroup, DiskLocation, subscriptionId",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "4cb395c5-0b29-4635-ad52-ce632845879d",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/find-unattached-nics"
              }
            }
          },
          "6": {
            "position": {
              "x": 11,
              "y": 9,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Orphaned Network Interface Cards",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Orphaned Network Interface Cards\r\nResourceContainers  | where type =~ 'Microsoft.Resources/subscriptions' | extend SubscriptionName=name | join ( Resources | where type =~ 'microsoft.network/networkinterfaces' and isempty(properties.virtualMachine) and isnull(properties.privateEndpoint)\r\n    | extend id,  NICName=name, NICresourceGroup=resourceGroup, NICLocation=location, NICType=tostring(properties.nicType)) on subscriptionId\r\n        | order by id asc\r\n        | project NICName, NICresourceGroup, NICLocation, NICType, SubscriptionName",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "93a42a7c-61f3-486d-8031-6a0771d7a3e3",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {}
            }
          },
          "7": {
            "position": {
              "x": 3,
              "y": 13,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Orphaned Availability Sets",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Orphaned Availability Sets\r\nResourceContainers | where type =~ 'Microsoft.Resources/subscriptions' \r\n| extend SubscriptionName=name \r\n| join ( resources | where type =~ 'Microsoft.Compute/availabilitySets' and tostring(properties.virtualMachines)=='[]' \r\n| extend id, AvailName=name, AvailresourceGroup=resourceGroup, AvailLocation=location, AvailFaultDomainCount=tostring(properties.platformFaultDomainCount),AvailUpdateDomainCount=tostring(properties.platformUpdateDomainCount)) on subscriptionId\r\n    | order by id asc\r\n    | project AvailName, AvailresourceGroup, AvailLocation, AvailFaultDomainCount, AvailUpdateDomainCount, SubscriptionName",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "30ae6995-6baf-43c3-a70b-b33cb5e3cebe",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {}
            }
          },
          "8": {
            "position": {
              "x": 11,
              "y": 13,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Orphaned Public IPs",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Orphaned Public IPs\r\nResourceContainers | where type =~ 'Microsoft.Resources/subscriptions' \r\n| extend SubscriptionName=name \r\n| join (resources | where type =~ 'Microsoft.Network/publicIPAddresses' and isempty(properties.ipConfiguration) \r\n| extend id, PIPName=name, PIPAllocationMethod=tostring(properties.publicIPAllocationMethod), PIPSKUName=sku.name, PIPresourceGroup=resourceGroup, PIPLocation=location)on subscriptionId \r\n        | order by id asc \r\n        | project PIPName, PIPSKUName, PIPAllocationMethod,PIPresourceGroup, PIPLocation, SubscriptionName",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "9cba04b1-13aa-44e7-95ee-082d0d139338",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {}
            }
          },
          "9": {
            "position": {
              "x": 3,
              "y": 17,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Orphaned Network Security Groups",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Orphaned Network Security Groups\r\nResourceContainers | where type =~ 'Microsoft.Resources/subscriptions' | extend SubscriptionName=name | join ( Resources | where type =~ 'microsoft.network/networksecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets) | extend id, NSGName=name, NSGresourceGroup=resourceGroup, NSGLocation=location ) on subscriptionId\r\n    | order by id asc\r\n    | project NSGName, NSGresourceGroup, NSGLocation, SubscriptionName",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "1b7dad5d-5867-4366-9b58-1134b15d8a84",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {}
            }
          },
          "10": {
            "position": {
              "x": 11,
              "y": 17,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Orphaned Web API connection and Gateway",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Orphaned Web API connection and Gateway\r\nresources\r\n| where type =~ 'Microsoft.Web/connections'\r\n| extend APIGatewayName=iff(isnotempty(todynamic(properties)[\"parameterValues\"]),todynamic(properties)[\"parameterValues\"][\"gateway\"][\"name\"] ,todynamic(properties)[\"parameterValueSet\"][\"values\"][\"gateway\"][\"value\"][\"name\"])\r\n|project APIid=id ,APIName=name,APIGatewayName,APIresourceGroup=resourceGroup,APILocation=location, subscriptionId\r\n|join kind= leftouter\r\n(\r\nresources\r\n| where type == 'microsoft.logic/workflows'\r\n|extend propertiesJson=parse_json(properties)\r\n|extend ConJson=propertiesJson[\"parameters\"][\"$connections\"][\"value\"]\r\n|mvexpand Conn=ConJson\r\n|where   notnull(Conn)\r\n|extend connectionId=extract(\"\\\"connectionId\\\":\\\"(.*?)\\\"\",1,tostring(Conn))\r\n|project connectionId,LogicApp_id=id,APILogicAppresourceGroup=resourceGroup,APILogicAppName=name, subscriptionId\r\n)   on  $left.APIid==$right.connectionId\r\n|project APIName ,APIresourceGroup,APILocation,APIGatewayName,APIUsedinLogicApp =iff(isnotempty(LogicApp_id), \"Yes\",\"No\"),APILogicAppresourceGroup,APILogicAppName, subscriptionId\r\n| order by APIUsedinLogicApp asc",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "1aae7296-771b-4cd5-aeac-c39abe94d680",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/find-orphans-unused-web-api-connection-and-gateway-name-using/ba-p/2465200"
              }
            }
          },
          "11": {
            "position": {
              "x": 0,
              "y": 21,
              "colSpan": 3,
              "rowSpan": 21
            },
            "metadata": {
              "inputs": [],
              "type": "Extension/HubsExtension/PartType/MarkdownPart",
              "settings": {
                "content": {
                  "settings": {
                    "content": "<div style='line-height:50px;'>\n<span style='font-size:22px;font-weight:bold'>Assets to evaluate</span>\n</div>\n",
                    "title": "",
                    "subtitle": "",
                    "markdownSource": 1,
                    "markdownUri": null
                  }
                }
              }
            }
          },
          "12": {
            "position": {
              "x": 3,
              "y": 21,
              "colSpan": 16,
              "rowSpan": 1
            },
            "metadata": {
              "inputs": [],
              "type": "Extension/HubsExtension/PartType/MarkdownPart",
              "settings": {
                "content": {
                  "settings": {
                    "content": "<div style='line-height:50px;'>\n<span style='font-size:16px;font-weight:bold'>Assets to evaluate</span>\n<span> - This section provides an overview of your assets to evaluate, with possible to reduce costs.</span>\n</div>\n",
                    "title": "",
                    "subtitle": "",
                    "markdownSource": 1,
                    "markdownUri": null
                  }
                }
              }
            }
          },
          "13": {
            "position": {
              "x": 3,
              "y": 22,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Azure Disks larger than P30",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Azure Disks larger than P30\r\nResources\r\n| where type =~ 'Microsoft.Compute/disks'\r\n| extend Diskname=name, Disksize = properties.diskSizeGB, DiskresourceGroup=resourceGroup, Disklocation=location\r\n| where sku.name == 'Premium_LRS'\r\n| where Disksize >= 1024\r\n| project Diskname, Disksize, DiskresourceGroup, Disklocation, subscriptionId\r\n| order by tostring(Disksize)",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "882f99d8-2297-4bab-a8d8-278a19f3be9b",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://docs.microsoft.com/en-us/azure/virtual-machines/disks-reserved-capacity"
              }
            }
          },
          "14": {
            "position": {
              "x": 11,
              "y": 22,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "AppService PremiumV2 instances",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//AppService PremiumV2 instances\r\nResourceContainers | where type =~ 'Microsoft.Resources/subscriptions'\r\n| extend SubscriptionName=name\r\n| join ( resources | where type =~ 'Microsoft.Web/sites'\r\n| extend WebAppId=id, WebAppresourceGroup=resourceGroup, WebAppName=name, WebAppServicePlan=tostring(properties.serverFarmId), WebAppSKU=tostring(properties.sku), WebAppType=kind, WebAppStatus=tostring(properties.state), WebAppLocation=location) on subscriptionId\r\n| where WebAppSKU == 'PremiumV2'\r\n| order by WebAppId asc\r\n| project WebAppName, WebAppSKU, WebAppresourceGroup, WebAppLocation, WebAppType, subscriptionId",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "2692c582-396a-4418-ab20-65ae9adef864",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://docs.microsoft.com/en-us/azure/architecture/framework/services/compute/azure-app-service/cost-optimization"
              }
            }
          },
          "15": {
            "position": {
              "x": 3,
              "y": 26,
              "colSpan": 16,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "App Services Status",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//App Services Status\r\nResourceContainers | where type =~ 'Microsoft.Resources/subscriptions'\r\n| extend SubscriptionName=name\r\n| join ( resources | where type =~ 'Microsoft.Web/sites'\r\n| extend WebAppId=id, WebAppresourceGroup=resourceGroup, WebAppName=name, WebAppServicePlan=tostring(properties.serverFarmId), WebAppSKU=tostring(properties.sku), WebAppType=kind, WebAppStatus=tostring(properties.state), WebAppLocation=location) on subscriptionId\r\n| order by WebAppStatus desc  \r\n| project WebAppName, WebAppStatus, WebAppSKU, WebAppresourceGroup, WebAppLocation, WebAppType, subscriptionId",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "329f7395-d082-4af9-8ad8-9e94a1bfcec2",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://docs.microsoft.com/en-us/azure/architecture/framework/services/compute/azure-app-service/cost-optimization"
              }
            }
          },
          "16": {
            "position": {
              "x": 3,
              "y": 30,
              "colSpan": 16,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Storage Accounts (Kind and Replication), Key Vaults and Recovery Services Vault",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Storage Accounts (Kind and Replication), Key Vaults and Recovery Services Vault\r\nresources \r\n| where type =~ 'microsoft.storagesync/storagesyncservices'\r\n    or type =~ 'microsoft.recoveryservices/vaults'\r\n    or type =~ 'microsoft.storage/storageaccounts'\r\n    or type =~ 'microsoft.keyvault/vaults'\r\n| extend Sttype = case(\r\n    type =~ 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\n    type =~ 'microsoft.recoveryservices/vaults', 'Azure Backup',\r\n    type =~ 'microsoft.storage/storageaccounts', 'Storage Accounts',\r\n    type =~ 'microsoft.keyvault/vaults', 'Key Vaults',\r\n    strcat(\"Not Translated: \", type))\r\n| extend StSku = case(\r\n    type !has 'Key Vaults', sku.name,\r\n    type =~ 'Key Vaults', properties.sku.name,\r\n    ' ')\r\n| extend Stkind=kind, StresourceGroup=resourceGroup\r\n| extend Details = pack_all()\r\n| project StResource=id, Sttype, Stkind, StresourceGroup, StSku, subscriptionId\r\n| order by Sttype asc ",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "d6b1c0be-14ed-4479-8365-df020b9f649f",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {}
            }
          },
          "17": {
            "position": {
              "x": 3,
              "y": 34,
              "colSpan": 16,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Virtual Machine Power State - Stopped",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Virtual Machine Power State - Stopped\r\nResourceContainers | where type =~ 'Microsoft.Resources/subscriptions' | extend SubscriptionName=name | join ( resources | where type =~ 'microsoft.compute/virtualmachines' and tostring(properties.extended.instanceView.powerState.displayStatus) != 'VM deallocated' and tostring(properties.extended.instanceView.powerState.displayStatus) != 'VM running'| extend  VMname=name, VMPowerState=tostring(properties.extended.instanceView.powerState.displayStatus), VMLocation=location, VMRG=resourceGroup, VMID=id) on subscriptionId\r\n    | order by VMID asc \r\n    | project VMname, VMPowerState, VMLocation, VMRG, SubscriptionName",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "1c9f6b39-c386-4cb9-ad79-6e4242dc4745",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://docs.microsoft.com/en-us/azure/virtual-machines/states-billing"
              }
            }
          },
          "18": {
            "position": {
              "x": 3,
              "y": 38,
              "colSpan": 16,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Azure Kubernetes Service Power State",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Azure Kubernetes Service Power State\r\nresources\r\n| where type == \"microsoft.containerservice/managedclusters\"\r\n| project AKSname=name,AKSPowerState=tostring(properties.powerState.code),AKSID=id,AKSlocation=location,AKSresourceGroup=resourceGroup,AKSSku=tostring(sku.name),AKSTier=tostring(sku.tier),SubscriptionName = subscriptionId\r\n| order by AKSPowerState desc",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "853e57b0-8bb6-46e2-b1bf-216f560e47af",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://docs.microsoft.com/en-us/azure/aks/start-stop-cluster?tabs=azure-cli"
              }
            }
          },
          "19": {
            "position": {
              "x": 0,
              "y": 42,
              "colSpan": 3,
              "rowSpan": 14
            },
            "metadata": {
              "inputs": [],
              "type": "Extension/HubsExtension/PartType/MarkdownPart",
              "settings": {
                "content": {
                  "settings": {
                    "content": "<div style='line-height:50px;'>\n<span style='font-size:22px;font-weight:bold'>Azure Hybrid Benefits</span>\n</div>\n",
                    "title": "",
                    "subtitle": "",
                    "markdownSource": 1,
                    "markdownUri": null
                  }
                }
              }
            }
          },
          "20": {
            "position": {
              "x": 3,
              "y": 42,
              "colSpan": 16,
              "rowSpan": 1
            },
            "metadata": {
              "inputs": [],
              "type": "Extension/HubsExtension/PartType/MarkdownPart",
              "settings": {
                "content": {
                  "settings": {
                    "content": "<div style='line-height:50px;'>\n<span style='font-size:16px;font-weight:bold'>Virtual Machines</span>\n<span> - This section provides an overview of your assets to evaluate, Virtual Machines with possible to reduce costs when you have a Software Assurance active.</span>\n</div>\n",
                    "title": "",
                    "subtitle": "",
                    "markdownSource": 1,
                    "markdownUri": null
                  }
                }
              }
            }
          },
          "21": {
            "position": {
              "x": 3,
              "y": 43,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Windows VMs without Azure Hybrid Benefit enabled",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Windows VMs without Azure Hybrid Benefit enabled\r\nResourceContainers \r\n| where type =~ 'Microsoft.Resources/subscriptions' \r\n| extend SubscriptionName=name | join ( resources | where type =~ 'microsoft.compute/virtualmachines' and  tostring(properties.storageProfile.osDisk.osType) == 'Windows' and tostring(properties.['licenseType']) !has 'Windows' \r\n| extend VMWindowsId=id, VMName=name, VMLocation=location, VMresourceGroup=resourceGroup, VMOSType=tostring(properties.storageProfile.imageReference.offer), VMOsVersion = tostring(properties.storageProfile.imageReference.sku), VMSize=tostring (properties.hardwareProfile.vmSize), VMLicenseType = tostring(properties.['licenseType'])) on subscriptionId \r\n    | order by VMWindowsId asc \r\n    | project VMName,VMresourceGroup, VMLocation,VMOSType, VMOsVersion,VMLicenseType, VMSize, SubscriptionName",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "47a6f795-f43a-414d-bdd1-b3a10a4a2492",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://azure.microsoft.com/en-us/pricing/hybrid-benefit/"
              }
            }
          },
          "22": {
            "position": {
              "x": 11,
              "y": 43,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Linux VMs without Azure Hybrid Benefit enabled, applicable for RedHat and Suse only",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Linux VMs without Azure Hybrid Benefit enabled, applicable for RedHat and Suse only\r\nResourceContainers | where type =~ 'Microsoft.Resources/subscriptions' \r\n| extend SubscriptionName=name \r\n| join ( resources | where type =~ 'microsoft.compute/virtualmachines' and  tostring(properties.storageProfile.osDisk.osType) != 'Windows' and tostring(properties.['licenseType']) !contains '_BYOS' \r\n| extend LinuxId=id, VMName=name, VMLocation=location, VMRG=resourceGroup, OSType=tostring(properties.storageProfile.imageReference.offer), OsVersion = tostring(properties.storageProfile.imageReference.sku), VMSize=tostring (properties.hardwareProfile.vmSize), LicenseType = tostring(properties.['licenseType'])) on subscriptionId \r\n    | order by LinuxId=id asc, OSType asc \r\n    | project VMName,VMRG, VMLocation,OSType, OsVersion,LicenseType, VMSize, SubscriptionName",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "ed44299e-6b70-4898-8032-ce2334ebfab3",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/prepay-suse-software-charges"
              }
            }
          },
          "23": {
            "position": {
              "x": 3,
              "y": 47,
              "colSpan": 16,
              "rowSpan": 1
            },
            "metadata": {
              "inputs": [],
              "type": "Extension/HubsExtension/PartType/MarkdownPart",
              "settings": {
                "content": {
                  "settings": {
                    "content": "<div style='line-height:50px;'>\n<span style='font-size:16px;font-weight:normal'>SQL Virtual Machines and SQL Databases</span>\n<span> - This section provides an overview of your assets to evaluate, SQL Virtual Machines and SQL Databases with possible to reduce costs when you have a Software Assurance active.</span>\n</div>\n",
                    "title": "",
                    "subtitle": "",
                    "markdownSource": 1,
                    "markdownUri": null
                  }
                }
              }
            }
          },
          "24": {
            "position": {
              "x": 3,
              "y": 48,
              "colSpan": 16,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "SQL Virtual Machines without Azure Hybrid Benefit enabled",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//SQL Virtual Machines without Azure Hybrid Benefit enabled\r\nResourceContainers | where type =~ 'Microsoft.Resources/subscriptions' | extend SubscriptionName=name | join ( resources | where type =~ 'Microsoft.SqlVirtualMachine/SqlVirtualMachines' and tostring(properties.['sqlServerLicenseType']) != 'AHUB'  | extend id, SQLVMName = name, SQLVMresourceGroup = resourceGroup, SQLVMLocation = location, SQLVMLicenseType = tostring(properties.['sqlServerLicenseType']), SQLVMOSType=tostring(properties.storageProfile.imageReference.offer), SQLVMAgentType = tostring(properties.['sqlManagement']), SQLVMVersion = tostring(properties.['sqlImageOffer']), SQLVMSKU=tostring(properties.['sqlImageSku'])) on subscriptionId \r\n    | order by id asc    \r\n    | project SQLVMName,SQLVMresourceGroup, SQLVMLocation, SQLVMVersion, SQLVMSKU, SQLVMAgentType, SQLVMLicenseType, SubscriptionName",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "677ff1d6-efe5-4cf5-91f8-790c2e938a4c",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.sqlvirtualmachine.models.sqlserverlicensetype?view=azure-dotnet"
              }
            }
          },
          "25": {
            "position": {
              "x": 3,
              "y": 52,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Azure SQL Databases without Azure Hybrid Benefit",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Azure SQL Databases without Azure Hybrid Benefit\r\nResourceContainers \r\n| where type =~ 'Microsoft.Resources/subscriptions' \r\n| extend SubscriptionName=name \r\n| join (resources |  where type =~ 'Microsoft.Sql/servers/databases' and name != 'master' and tostring(properties.['licenseType']) == 'LicenseIncluded' \r\n| extend   SQLDBid=id, SQLDBName = name, SQLDBresourceGroup = resourceGroup, SQLDBSKUName=sku.name, SQLDBSKUTier=sku.tier, SQLDBLocation = location, SQLDBLicenseType = tostring(properties.['licenseType']), SQLDBStorageAccountType=tostring(properties.['storageAccountType'])) on subscriptionId \r\n    | order by SQLDBid asc    \r\n    | project SQLDBName,SQLDBresourceGroup, SQLDBLocation, SQLDBSKUName, SQLDBSKUTier, SQLDBLicenseType, SQLDBStorageAccountType, SubscriptionName",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "e18b7582-0728-47d6-80e8-5533e54319e0",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://docs.microsoft.com/en-us/azure/azure-sql/database/reserved-capacity-overview"
              }
            }
          },
          "26": {
            "position": {
              "x": 11,
              "y": 52,
              "colSpan": 8,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "partTitle",
                  "value": "Azure SQL Managed Instances without Azure Hybrid Benefit",
                  "isOptional": true
                },
                {
                  "name": "query",
                  "value": "//Azure SQL Managed Instances without Azure Hybrid Benefit\r\nResourceContainers \r\n| where type =~ 'Microsoft.Resources/subscriptions' \r\n| extend SubscriptionName=name | join (resources |  where type =~ 'Microsoft.Sql/managedInstances' and tostring(properties.['licenseType']) == 'LicenseIncluded' \r\n| extend SQLDBid=id, SQLDBManagedInstance=id, SQLDBresourceGroup=resourceGroup, SQLDBLocation=location, SQLDBLicenseType = tostring(properties.['licenseType'])) on subscriptionId \r\n    | order by SQLDBid asc\r\n    | project SQLDBManagedInstance,SQLDBresourceGroup, SQLDBLocation, SQLDBLicenseType, SubscriptionName",
                  "isOptional": true
                },
                {
                  "name": "chartType",
                  "isOptional": true
                },
                {
                  "name": "isShared",
                  "isOptional": true
                },
                {
                  "name": "queryId",
                  "value": "20c9a3ff-f36e-415b-a470-84d18e3ca63b",
                  "isOptional": true
                },
                {
                  "name": "formatResults",
                  "isOptional": true
                },
                {
                  "name": "queryScope",
                  "value": {
                    "scope": 0,
                    "values": []
                  },
                  "isOptional": true
                }
              ],
              "type": "Extension/HubsExtension/PartType/ArgQueryGridTile",
              "settings": {},
              "partHeader": {
                "subtitle": "https://docs.microsoft.com/en-us/azure/azure-sql/database/reserved-capacity-overview"
              }
            }
          }
        }
      }
    },
    "metadata": {
      "model": {
        "timeRange": {
          "value": {
            "relative": {
              "duration": 24,
              "timeUnit": 1
            }
          },
          "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
        },
        "filterLocale": {
          "value": "en-us"
        },
        "filters": {
          "value": {
            "MsPortalFx_TimeRange": {
              "model": {
                "format": "utc",
                "granularity": "auto",
                "relative": "24h"
              },
              "displayCache": {
                "name": "UTC Time",
                "value": "Past 24 hours"
              },
              "filteredPartIds": []
            }
          }
        }
      }
    }
  },
  "name": "Cost and Optimization",
  "type": "Microsoft.Portal/dashboards",
  "location": "INSERT LOCATION",
  "tags": {
    "hidden-title": "Cost and Optimization"
  },
  "apiVersion": "2015-08-01-preview"
}
